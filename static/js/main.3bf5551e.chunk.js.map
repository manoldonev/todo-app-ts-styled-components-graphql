{"version":3,"sources":["generated/index.ts","store/useStore.ts","components/TodoList/TodoItem/SwipeToDelete.tsx","components/common/ImageButton/ImageButton.tsx","components/TodoList/TodoItem/TodoItem.tsx","components/TodoList/useTodos.ts","store/middleware/immer.ts","hooks/useHotkeys.ts","components/TodoList/Header/Header.tsx","components/TodoList/Actions/Actions.tsx","components/TodoList/Filter/Filter.tsx","components/TodoList/Pagination/Pagination.tsx","components/TodoList/Footer/Footer.tsx","components/TodoList/InputBox/InputBox.tsx","components/TodoList/SearchBox/SearchBox.tsx","components/TodoList/InputToggle/InputToggle.tsx","components/TodoList/InfoPanel/InfoPanel.tsx","reportWebVitals.ts","components/TodoList/useTodoHotkeys.ts","components/TodoList/TodoList.tsx","components/App/queryClient.ts","components/App/App.tsx","index.tsx"],"names":["MathOptions","fetcher","query","variables","a","fetch","method","body","JSON","stringify","res","json","errors","message","Error","data","FilterMode","InputMode","useTodosQuery","options","useQuery","undefined","Wrapper","styled","div","BackgroundLayer","props","swipeDirection","LEFT","RIGHT","ForegroundLayer","SwipeToDelete","children","threshold","onSwiped","onTap","foregroundRef","useRef","backgroundRef","useState","setSwipeDirection","swipeableHandlers","useSwipeable","trackMouse","preventDefaultTouchmoveEvent","onSwipeStart","current","style","transition","transform","onSwiping","eventData","deltaX","opacity","Math","min","abs","toFixed","dir","left","offsetWidth","ref","icon","faTrashAlt","fixedWidth","onMouseDown","element","ImageButton","button","attrs","type","ListItem","li","done","Checkbox","input","Label","label","DeleteButton","TodoItem","id","task","queryClient","useQueryClient","onSuccess","invalidateQueries","useMutation","updateTodo","mutate","useDeleteTodoMutation","deleteTodo","isTouchEnabled","useMediaQuery","toggleItem","deleteItem","content","htmlFor","checked","onChange","onClick","SortDirection","useStore","pipe","set","page","togglePage","filterMode","All","toggleFilterMode","inputMode","Add","toggleInputMode","updateQuery","config","get","api","fn","produce","result","persist","name","getStorage","sessionStorage","create","createSelectorHooks","ActionType","useTodos","currentPage","usePage","useFilterMode","useInputMode","Active","done_eq","Done","Search","task_contains","queryVariables","limit","sort","direction","Descending","keepPreviousData","staleTime","isFetching","isPreviousData","nextData","hasMoreData","todos","length","StyledHeader","h1","Header","ActionList","ul","ActionItem","ActionButton","active","StyledFontAwesomeIcon","FontAwesomeIcon","Actions","mode","useToggleInputMode","value","faPlus","faSearch","FilterList","FilterItem","Button","Filter","useToggleFilterMode","Object","entries","map","key","PaginationList","PaginationItem","Pagination","useTogglePage","max","disabled","faChevronLeft","faChevronRight","StyledFooter","Footer","StyledInput","InputBox","useUpdateQuery","placeholder","e","target","onKeyUp","code","taskToAdd","trim","user_id","SearchBox","InputToggle","Paragraph","p","InfoPanel","None","onPerfEntry","blacklistedTargets","keysReducer","state","action","Keydown","draft","Keyup","Reset","payload","useHotkeys","hotkeys","callback","lowerCaseKeys","toLowerCase","initialKeyMapping","reduce","keys","currentKey","useReducer","setKeys","handleKeydown","useCallback","keydownEvent","repeat","lowerCaseKey","includes","tagName","handleKeyup","keyupEvent","useEffect","values","every","window","addEventListener","removeEventListener","shiftKey","Section","section","StyledList","TodoList","searchModeKeys","noInputModeKeys","useTodoHotkeys","todo","QueryClient","queryCache","QueryCache","onError","error","toast","App","client","initialIsOpen","ReactDOM","render","StrictMode","document","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.3bf5551e.chunk.js","sourcesContent":["import { useMutation, UseMutationOptions, useQuery, UseQueryOptions } from 'react-query';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n\nfunction fetcher<TData, TVariables>(query: string, variables?: TVariables) {\n  return async (): Promise<TData> => {\n    const res = await fetch(\"https://fakeql.com/graphql/a84889379bf38e69400ee9ba6ad07c58\", {\n    method: \"POST\",\n      body: JSON.stringify({ query, variables }),\n    });\n\n    const json = await res.json();\n\n    if (json.errors) {\n      const { message } = json.errors[0];\n\n      throw new Error(message);\n    }\n\n    return json.data;\n  }\n}\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `DateTime` scalar represents a date and time following the ISO 8601 standard */\n  DateTime: any;\n  _Any: any;\n  _FieldSet: any;\n};\n\nexport type CreateTodoInput = {\n  done: Scalars['Boolean'];\n  task: Scalars['String'];\n  user_id: Scalars['ID'];\n};\n\nexport type CreateUserInput = {\n  firstname: Scalars['String'];\n};\n\nexport enum MathOptions {\n  Ceil = 'CEIL',\n  Floor = 'FLOOR',\n  Round = 'ROUND'\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  _createSnapshot: Scalars['Boolean'];\n  createTodo: Todo;\n  createUser: User;\n  deleteTodo: Scalars['ID'];\n  deleteUser: Scalars['ID'];\n  updateTodo: Todo;\n  updateUser: User;\n};\n\n\nexport type Mutation_CreateSnapshotArgs = {\n  key: Scalars['String'];\n};\n\n\nexport type MutationCreateTodoArgs = {\n  input: CreateTodoInput;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input: CreateUserInput;\n};\n\n\nexport type MutationDeleteTodoArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateTodoArgs = {\n  id: Scalars['ID'];\n  input: UpdateTodoInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  id: Scalars['ID'];\n  input: UpdateUserInput;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  _aggregation: Scalars['Float'];\n  _entities: Array<Maybe<_Entity>>;\n  _service: _Service;\n  _typeDefs: Scalars['String'];\n  todo?: Maybe<Todo>;\n  todos?: Maybe<Array<Maybe<Todo>>>;\n  user?: Maybe<User>;\n  users?: Maybe<Array<Maybe<User>>>;\n};\n\n\nexport type Query_AggregationArgs = {\n  field?: Maybe<Scalars['String']>;\n  ref?: Maybe<Scalars['String']>;\n  stat: Scalars['String'];\n  type?: Maybe<Scalars['String']>;\n};\n\n\nexport type Query_EntitiesArgs = {\n  representations: Array<Scalars['_Any']>;\n};\n\n\nexport type QueryTodoArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTodosArgs = {\n  dir?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  page?: Maybe<Scalars['Int']>;\n  ref?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n  where?: Maybe<TodosWhere>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryUsersArgs = {\n  dir?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  page?: Maybe<Scalars['Int']>;\n  ref?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n  where?: Maybe<UsersWhere>;\n};\n\nexport type Todo = {\n  __typename?: 'Todo';\n  _boolean: Scalars['Boolean'];\n  _float: Scalars['Float'];\n  _int: Scalars['Int'];\n  _nest: Todo;\n  _string: Scalars['String'];\n  done: Scalars['Boolean'];\n  id: Scalars['ID'];\n  task: Scalars['String'];\n  user: User;\n};\n\n\nexport type Todo_FloatArgs = {\n  fixed?: Maybe<Scalars['Int']>;\n  max?: Maybe<Scalars['Float']>;\n  min?: Maybe<Scalars['Float']>;\n};\n\n\nexport type Todo_IntArgs = {\n  max?: Maybe<Scalars['Int']>;\n  min?: Maybe<Scalars['Int']>;\n};\n\n\nexport type Todo_StringArgs = {\n  casing?: Maybe<Scalars['String']>;\n  full?: Maybe<Scalars['Boolean']>;\n  length?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  max?: Maybe<Scalars['Int']>;\n  min?: Maybe<Scalars['Int']>;\n  nationality?: Maybe<Scalars['String']>;\n  pool?: Maybe<Scalars['String']>;\n  sentences?: Maybe<Scalars['Int']>;\n  syllables?: Maybe<Scalars['Int']>;\n  template?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  words?: Maybe<Scalars['Int']>;\n};\n\n\nexport type TodoTaskArgs = {\n  length?: Maybe<Scalars['Int']>;\n};\n\nexport type TodosWhere = {\n  and?: Maybe<Array<TodosWhere>>;\n  done_eq?: Maybe<Scalars['Boolean']>;\n  done_exists?: Maybe<Scalars['Boolean']>;\n  id_eq?: Maybe<Scalars['Float']>;\n  id_ge?: Maybe<Scalars['Float']>;\n  id_gt?: Maybe<Scalars['Float']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_le?: Maybe<Scalars['Float']>;\n  id_lt?: Maybe<Scalars['Float']>;\n  id_neq?: Maybe<Scalars['Float']>;\n  id_nin?: Maybe<Array<Scalars['ID']>>;\n  like?: Maybe<Scalars['String']>;\n  not?: Maybe<Array<TodosWhere>>;\n  or?: Maybe<Array<TodosWhere>>;\n  search?: Maybe<Scalars['String']>;\n  task_contains?: Maybe<Scalars['String']>;\n  task_endswith?: Maybe<Scalars['String']>;\n  task_eq?: Maybe<Scalars['String']>;\n  task_exists?: Maybe<Scalars['Boolean']>;\n  task_in?: Maybe<Array<Scalars['String']>>;\n  task_neq?: Maybe<Scalars['String']>;\n  task_nin?: Maybe<Array<Scalars['String']>>;\n  task_startswith?: Maybe<Scalars['String']>;\n  user_and?: Maybe<Array<UsersWhere>>;\n  user_firstname_contains?: Maybe<Scalars['String']>;\n  user_firstname_endswith?: Maybe<Scalars['String']>;\n  user_firstname_eq?: Maybe<Scalars['String']>;\n  user_firstname_exists?: Maybe<Scalars['Boolean']>;\n  user_firstname_in?: Maybe<Array<Scalars['String']>>;\n  user_firstname_neq?: Maybe<Scalars['String']>;\n  user_firstname_nin?: Maybe<Array<Scalars['String']>>;\n  user_firstname_startswith?: Maybe<Scalars['String']>;\n  user_id_eq?: Maybe<Scalars['Float']>;\n  user_id_exists?: Maybe<Scalars['Boolean']>;\n  user_id_ge?: Maybe<Scalars['Float']>;\n  user_id_gt?: Maybe<Scalars['Float']>;\n  user_id_in?: Maybe<Array<Scalars['ID']>>;\n  user_id_le?: Maybe<Scalars['Float']>;\n  user_id_lt?: Maybe<Scalars['Float']>;\n  user_id_neq?: Maybe<Scalars['Float']>;\n  user_id_nin?: Maybe<Array<Scalars['ID']>>;\n  user_like?: Maybe<Scalars['String']>;\n  user_not?: Maybe<Array<UsersWhere>>;\n  user_or?: Maybe<Array<UsersWhere>>;\n  user_search?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateTodoInput = {\n  done?: Maybe<Scalars['Boolean']>;\n  task?: Maybe<Scalars['String']>;\n  user_id?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateUserInput = {\n  firstname?: Maybe<Scalars['String']>;\n};\n\nexport type User = {\n  __typename?: 'User';\n  _boolean: Scalars['Boolean'];\n  _float: Scalars['Float'];\n  _int: Scalars['Int'];\n  _nest: User;\n  _string: Scalars['String'];\n  firstname: Scalars['String'];\n  id: Scalars['ID'];\n  todos?: Maybe<Array<Maybe<Todo>>>;\n};\n\n\nexport type User_FloatArgs = {\n  fixed?: Maybe<Scalars['Int']>;\n  max?: Maybe<Scalars['Float']>;\n  min?: Maybe<Scalars['Float']>;\n};\n\n\nexport type User_IntArgs = {\n  max?: Maybe<Scalars['Int']>;\n  min?: Maybe<Scalars['Int']>;\n};\n\n\nexport type User_StringArgs = {\n  casing?: Maybe<Scalars['String']>;\n  full?: Maybe<Scalars['Boolean']>;\n  length?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  max?: Maybe<Scalars['Int']>;\n  min?: Maybe<Scalars['Int']>;\n  nationality?: Maybe<Scalars['String']>;\n  pool?: Maybe<Scalars['String']>;\n  sentences?: Maybe<Scalars['Int']>;\n  syllables?: Maybe<Scalars['Int']>;\n  template?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  words?: Maybe<Scalars['Int']>;\n};\n\n\nexport type UserFirstnameArgs = {\n  length?: Maybe<Scalars['Int']>;\n};\n\n\nexport type UserTodosArgs = {\n  dir?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  page?: Maybe<Scalars['Int']>;\n  ref?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n  where?: Maybe<TodosWhere>;\n};\n\nexport type UsersWhere = {\n  and?: Maybe<Array<UsersWhere>>;\n  firstname_contains?: Maybe<Scalars['String']>;\n  firstname_endswith?: Maybe<Scalars['String']>;\n  firstname_eq?: Maybe<Scalars['String']>;\n  firstname_exists?: Maybe<Scalars['Boolean']>;\n  firstname_in?: Maybe<Array<Scalars['String']>>;\n  firstname_neq?: Maybe<Scalars['String']>;\n  firstname_nin?: Maybe<Array<Scalars['String']>>;\n  firstname_startswith?: Maybe<Scalars['String']>;\n  id_eq?: Maybe<Scalars['Float']>;\n  id_ge?: Maybe<Scalars['Float']>;\n  id_gt?: Maybe<Scalars['Float']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_le?: Maybe<Scalars['Float']>;\n  id_lt?: Maybe<Scalars['Float']>;\n  id_neq?: Maybe<Scalars['Float']>;\n  id_nin?: Maybe<Array<Scalars['ID']>>;\n  like?: Maybe<Scalars['String']>;\n  not?: Maybe<Array<UsersWhere>>;\n  or?: Maybe<Array<UsersWhere>>;\n  search?: Maybe<Scalars['String']>;\n};\n\nexport type _Entity = Todo | User;\n\nexport type _Service = {\n  __typename?: '_Service';\n  sdl?: Maybe<Scalars['String']>;\n};\n\nexport type CreateTodoMutationVariables = Exact<{\n  input: CreateTodoInput;\n}>;\n\n\nexport type CreateTodoMutation = { __typename?: 'Mutation', createTodo: { __typename?: 'Todo', id: string, task: string, done: boolean } };\n\nexport type DeleteTodoMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteTodoMutation = { __typename?: 'Mutation', deleteTodo: string };\n\nexport type UpdateTodoMutationVariables = Exact<{\n  id: Scalars['ID'];\n  input: UpdateTodoInput;\n}>;\n\n\nexport type UpdateTodoMutation = { __typename?: 'Mutation', updateTodo: { __typename?: 'Todo', id: string, task: string, done: boolean } };\n\nexport type TodosQueryVariables = Exact<{\n  page?: Maybe<Scalars['Int']>;\n  limit?: Maybe<Scalars['Int']>;\n  input?: Maybe<TodosWhere>;\n  sort?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type TodosQuery = { __typename?: 'Query', todos?: Array<{ __typename?: 'Todo', id: string, task: string, done: boolean } | null | undefined> | null | undefined };\n\n\nexport const CreateTodoDocument = `\n    mutation createTodo($input: CreateTodoInput!) {\n  createTodo(input: $input) {\n    id\n    task\n    done\n  }\n}\n    `;\nexport const useCreateTodoMutation = <\n      TError = unknown,\n      TContext = unknown\n    >(options?: UseMutationOptions<CreateTodoMutation, TError, CreateTodoMutationVariables, TContext>) =>\n    useMutation<CreateTodoMutation, TError, CreateTodoMutationVariables, TContext>(\n      'createTodo',\n      (variables?: CreateTodoMutationVariables) => fetcher<CreateTodoMutation, CreateTodoMutationVariables>(CreateTodoDocument, variables)(),\n      options\n    );\nexport const DeleteTodoDocument = `\n    mutation deleteTodo($id: ID!) {\n  deleteTodo(id: $id)\n}\n    `;\nexport const useDeleteTodoMutation = <\n      TError = unknown,\n      TContext = unknown\n    >(options?: UseMutationOptions<DeleteTodoMutation, TError, DeleteTodoMutationVariables, TContext>) =>\n    useMutation<DeleteTodoMutation, TError, DeleteTodoMutationVariables, TContext>(\n      'deleteTodo',\n      (variables?: DeleteTodoMutationVariables) => fetcher<DeleteTodoMutation, DeleteTodoMutationVariables>(DeleteTodoDocument, variables)(),\n      options\n    );\nexport const UpdateTodoDocument = `\n    mutation updateTodo($id: ID!, $input: UpdateTodoInput!) {\n  updateTodo(id: $id, input: $input) {\n    id\n    task\n    done\n  }\n}\n    `;\nexport const useUpdateTodoMutation = <\n      TError = unknown,\n      TContext = unknown\n    >(options?: UseMutationOptions<UpdateTodoMutation, TError, UpdateTodoMutationVariables, TContext>) =>\n    useMutation<UpdateTodoMutation, TError, UpdateTodoMutationVariables, TContext>(\n      'updateTodo',\n      (variables?: UpdateTodoMutationVariables) => fetcher<UpdateTodoMutation, UpdateTodoMutationVariables>(UpdateTodoDocument, variables)(),\n      options\n    );\nexport const TodosDocument = `\n    query Todos($page: Int, $limit: Int, $input: TodosWhere, $sort: String, $direction: String) {\n  todos(page: $page, limit: $limit, where: $input, sort: $sort, dir: $direction) {\n    id\n    task\n    done\n  }\n}\n    `;\nexport const useTodosQuery = <\n      TData = TodosQuery,\n      TError = unknown\n    >(\n      variables?: TodosQueryVariables,\n      options?: UseQueryOptions<TodosQuery, TError, TData>\n    ) =>\n    useQuery<TodosQuery, TError, TData>(\n      variables === undefined ? ['Todos'] : ['Todos', variables],\n      fetcher<TodosQuery, TodosQueryVariables>(TodosDocument, variables),\n      options\n    );","import { createSelectorHooks } from 'auto-zustand-selectors-hook';\nimport type { StateCreator } from 'zustand';\nimport { pipe } from 'remeda';\nimport create from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport type { Draft } from 'immer';\nimport { withImmer } from './middleware';\n\nenum FilterMode {\n  All = 'all',\n  Active = 'active',\n  Done = 'done',\n}\n\nenum InputMode {\n  Add,\n  Search,\n  None,\n}\n\ninterface TodoState {\n  page: number;\n  togglePage: (newPage: number) => void;\n  filterMode: FilterMode;\n  toggleFilterMode: (filterMode: FilterMode) => void;\n  inputMode: InputMode;\n  toggleInputMode: (inputMode: InputMode) => void;\n  query: string;\n  updateQuery: (query: string) => void;\n}\n\nconst defaultPage = 1;\n\nconst config: StateCreator<\n  TodoState,\n  (fn: (draft: Draft<TodoState>) => void) => void\n> = (set) => ({\n  page: defaultPage,\n  togglePage: (page) => {\n    set(() => ({ page }));\n  },\n\n  filterMode: FilterMode.All,\n  toggleFilterMode: (filterMode) => {\n    set(() => ({ filterMode, page: defaultPage }));\n  },\n\n  inputMode: InputMode.Add,\n  toggleInputMode: (inputMode) => {\n    set(() => ({\n      inputMode,\n      filterMode: FilterMode.All,\n      page: defaultPage,\n    }));\n  },\n\n  query: '',\n  updateQuery: (query) => {\n    set(() => ({ query }));\n  },\n});\n\nconst useStore = pipe(\n  config,\n  withImmer,\n  (result) =>\n    persist(result, { name: 'todo-storage', getStorage: () => sessionStorage }),\n  (result) => create<TodoState>(result),\n  createSelectorHooks,\n);\n\nexport { useStore, InputMode, FilterMode };\nexport type { TodoState };\n","import { useRef, useState } from 'react';\nimport styled from 'styled-components/macro';\nimport type {\n  SwipeCallback,\n  SwipeDirections,\n  TapCallback,\n} from 'react-swipeable';\nimport { LEFT, RIGHT, useSwipeable } from 'react-swipeable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n`;\n\nconst BackgroundLayer = styled.div<{\n  swipeDirection: SwipeDirections;\n}>`\n  position: absolute;\n  z-index: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 1.5rem;\n  color: white;\n  background-color: #c70000;\n\n  ${(props) =>\n    props.swipeDirection === LEFT &&\n    `\n    justify-content: flex-end;\n  `}\n\n  ${(props) =>\n    props.swipeDirection === RIGHT &&\n    `\n    justify-content: flex-start;\n  `}\n`;\n\nconst ForegroundLayer = styled.div`\n  position: relative;\n  z-index: 1;\n  height: 100%;\n  width: 100%;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n`;\n\nconst SwipeToDelete = ({\n  children,\n  threshold = 0.3,\n  onSwiped,\n  onTap,\n}: {\n  children: React.ReactNode;\n  threshold?: number;\n  onSwiped?: SwipeCallback;\n  onTap?: TapCallback;\n}): JSX.Element | null => {\n  const foregroundRef = useRef<HTMLDivElement | null>(null);\n  const backgroundRef = useRef<HTMLDivElement | null>(null);\n  const [swipeDirection, setSwipeDirection] = useState<SwipeDirections>(LEFT);\n\n  const swipeableHandlers = useSwipeable({\n    // if tracking mouse see https://github.com/FormidableLabs/react-swipeable/issues/231 for a workaround\n    trackMouse: false,\n    preventDefaultTouchmoveEvent: true,\n    onTap,\n    onSwipeStart: () => {\n      if (foregroundRef.current) {\n        foregroundRef.current.style.transition = '';\n        foregroundRef.current.style.transform = '';\n      }\n    },\n    onSwiping: (eventData) => {\n      if (foregroundRef.current) {\n        const transform = `translateX(${eventData.deltaX}px)`;\n        foregroundRef.current.style.transform = transform;\n      }\n\n      if (backgroundRef.current) {\n        const opacity = Math.min(Math.abs(eventData.deltaX) / 100, 1);\n        backgroundRef.current.style.opacity = opacity.toFixed(2);\n      }\n\n      setSwipeDirection(eventData.dir);\n    },\n    onSwiped: (eventData) => {\n      if (!foregroundRef.current) {\n        return;\n      }\n\n      let left = eventData.deltaX;\n      const { offsetWidth } = foregroundRef.current;\n      if (Math.abs(left) >= offsetWidth * threshold) {\n        left = eventData.dir === LEFT ? -offsetWidth * 2 : offsetWidth;\n\n        if (onSwiped) {\n          onSwiped(eventData);\n        }\n      } else {\n        left = 0;\n      }\n\n      foregroundRef.current.style.transition = 'transform 0.5s ease-out';\n      foregroundRef.current.style.transform = `translateX(${left}px)`;\n    },\n  });\n\n  const refPassthrough = (element: HTMLDivElement): void => {\n    swipeableHandlers.ref(element);\n    foregroundRef.current = element;\n  };\n\n  return (\n    <Wrapper>\n      <BackgroundLayer ref={backgroundRef} swipeDirection={swipeDirection}>\n        <FontAwesomeIcon icon={faTrashAlt} fixedWidth />\n      </BackgroundLayer>\n      <ForegroundLayer\n        onMouseDown={swipeableHandlers.onMouseDown}\n        ref={refPassthrough}\n      >\n        {children}\n      </ForegroundLayer>\n    </Wrapper>\n  );\n};\n\nexport { SwipeToDelete };\n","import styled from 'styled-components/macro';\n\nconst ImageButton = styled.button.attrs({ type: 'button' })`\n  background-color: transparent;\n  border: 0;\n  font-size: calc(max(2rem, 20px));\n  transition: 0.3s all;\n  opacity: 0.4;\n\n  &:enabled {\n    cursor: pointer;\n  }\n\n  &:hover:enabled {\n    opacity: 1;\n  }\n`;\n\nexport { ImageButton };\n","import styled from 'styled-components/macro';\nimport { useQueryClient } from 'react-query';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useMediaQuery } from '@react-hook/media-query';\nimport {\n  useDeleteTodoMutation,\n  useUpdateTodoMutation,\n} from '../../../generated';\nimport { SwipeToDelete } from './SwipeToDelete';\nimport { ImageButton } from '../../common/ImageButton';\n\nconst ListItem = styled.li<{ done: boolean }>`\n  position: relative;\n  display: flex;\n  background-color: #fff;\n  border: none;\n  border-bottom: 0.1rem solid #ddd;\n  min-height: 5rem;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  ${(props) =>\n    props.done &&\n    `\n    text-decoration: line-through;\n    color: #aaa;  \n    `}\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1 1 100%;\n`;\n\nconst Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  flex: 0 0 auto;\n  margin: 0 1.5rem;\n  height: 2rem;\n  width: 2rem;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  flex: 1 1 100%;\n  padding: 0.8rem 0;\n`;\n\nconst DeleteButton = styled(ImageButton)`\n  padding: 0 1.5rem;\n`;\n\nconst TodoItem = ({\n  data,\n}: {\n  data: {\n    id: string;\n    task: string;\n    done: boolean;\n  };\n}): JSX.Element => {\n  const { id, task, done } = data;\n  const queryClient = useQueryClient();\n  const { mutate: updateTodo } = useUpdateTodoMutation({\n    onSuccess: async () => queryClient.invalidateQueries('Todos'),\n  });\n\n  const { mutate: deleteTodo } = useDeleteTodoMutation({\n    onSuccess: async () => queryClient.invalidateQueries('Todos'),\n  });\n\n  const isTouchEnabled = useMediaQuery('(pointer: coarse)');\n\n  const toggleItem = (): void => {\n    updateTodo({ id, input: { done: !done } });\n  };\n\n  const deleteItem = (): void => {\n    deleteTodo({ id });\n  };\n\n  const content = (\n    <Wrapper>\n      <Label htmlFor={id}>\n        <Checkbox id={id} checked={done} onChange={toggleItem} />\n        {task}\n      </Label>\n    </Wrapper>\n  );\n\n  if (!isTouchEnabled) {\n    return (\n      <ListItem done={done}>\n        {content}\n        <DeleteButton onClick={deleteItem} aria-label=\"Delete Item\">\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </DeleteButton>\n      </ListItem>\n    );\n  }\n\n  return (\n    <ListItem done={done}>\n      <SwipeToDelete onSwiped={deleteItem} onTap={toggleItem}>\n        {content}\n      </SwipeToDelete>\n    </ListItem>\n  );\n};\n\nexport { TodoItem };\n","import type { TodosQuery } from '../../generated';\nimport { useTodosQuery } from '../../generated';\nimport { useStore, FilterMode, InputMode } from '../../store';\n\nconst enum SortDirection {\n  Ascending = 'asc',\n  Descending = 'desc',\n}\n\nconst pageSize = 5;\n\nconst useTodos = (): {\n  data: TodosQuery | undefined;\n  isFetching: boolean;\n  isPreviousData: boolean;\n  hasMoreData: boolean;\n} => {\n  const currentPage = useStore.usePage();\n  const filterMode = useStore.useFilterMode();\n  const inputMode = useStore.useInputMode();\n  const query = useStore.useQuery();\n  let input = null;\n  if (filterMode === FilterMode.Active) {\n    input = { done_eq: false };\n  } else if (filterMode === FilterMode.Done) {\n    input = { done_eq: true };\n  }\n\n  if (query !== '' && inputMode === InputMode.Search) {\n    // TODO: case-insensitive search after switching to https://hasura.io/\n    input = { ...input, task_contains: query };\n  }\n\n  const queryVariables = {\n    page: currentPage,\n    limit: pageSize,\n    input,\n    sort: 'id',\n    direction: SortDirection.Descending,\n  };\n\n  const { data, isFetching, isPreviousData } = useTodosQuery(queryVariables, {\n    keepPreviousData: true,\n    staleTime: 5000,\n  });\n\n  const { data: nextData } = useTodosQuery({\n    ...queryVariables,\n    page: currentPage + 1,\n  });\n\n  return {\n    data,\n    isFetching,\n    isPreviousData,\n    hasMoreData: nextData?.todos?.length != null && nextData.todos.length > 0,\n  };\n};\n\nexport { useTodos };\n","import type { State, StateCreator } from 'zustand';\nimport type { Draft } from 'immer';\nimport produce from 'immer';\n\nconst withImmer =\n  <T extends State>(\n    config: StateCreator<T, (fn: (draft: Draft<T>) => void) => void>,\n  ): StateCreator<T> =>\n  (set, get, api) =>\n    config((fn) => set(produce<T>(fn)), get, api);\n\nexport { withImmer };\n","import produce from 'immer';\nimport { useReducer, useCallback, useEffect } from 'react';\n\nenum ActionType {\n  Keydown,\n  Keyup,\n  Reset,\n}\n\ninterface Action {\n  type: ActionType;\n  key?: string;\n  payload?: KeyMapping;\n}\n\ninterface KeyMapping {\n  [key: string]: boolean;\n}\n\nconst blacklistedTargets = ['input', 'textarea'];\n\nconst keysReducer = (state: KeyMapping, action: Action): KeyMapping => {\n  switch (action.type) {\n    case ActionType.Keydown: {\n      return produce(state, (draft) => {\n        if (action.key == null) {\n          throw new Error(`${action.type}: missing key`);\n        }\n\n        draft[action.key] = true;\n      });\n    }\n    case ActionType.Keyup: {\n      return produce(state, (draft) => {\n        if (action.key == null) {\n          throw new Error(`${action.type}: missing key`);\n        }\n\n        draft[action.key] = false;\n      });\n    }\n    case ActionType.Reset: {\n      if (action.payload == null) {\n        throw new Error(`${action.type}: missing payload`);\n      }\n\n      return { ...action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst useHotkeys = (\n  hotkeys: string[],\n  callback: (keys: KeyMapping) => void,\n): void => {\n  if (!hotkeys.length) {\n    throw new Error(\n      'The first parameter to `useHotkey` must contain at least one `KeyboardEvent.key` string.',\n    );\n  }\n\n  const lowerCaseKeys = hotkeys.map((key) => key.toLowerCase());\n  const initialKeyMapping = lowerCaseKeys.reduce<KeyMapping>(\n    (keys, currentKey) => {\n      keys[currentKey] = false;\n      return keys;\n    },\n    {},\n  );\n\n  const [keys, setKeys] = useReducer(keysReducer, initialKeyMapping);\n\n  const handleKeydown = useCallback(\n    (keydownEvent: KeyboardEvent) => {\n      const { key, target, repeat } = keydownEvent;\n      const lowerCaseKey = key.toLowerCase();\n\n      if (\n        repeat ||\n        blacklistedTargets.includes(\n          (target as HTMLElement).tagName.toLowerCase(),\n        ) ||\n        !lowerCaseKeys.includes(lowerCaseKey)\n      ) {\n        return;\n      }\n\n      if (!keys[lowerCaseKey]) {\n        setKeys({ type: ActionType.Keydown, key: lowerCaseKey });\n      }\n    },\n    [keys, lowerCaseKeys],\n  );\n\n  const handleKeyup = useCallback(\n    (keyupEvent: KeyboardEvent) => {\n      const { key, target } = keyupEvent;\n      const lowerCaseKey = key.toLowerCase();\n\n      if (\n        blacklistedTargets.includes(\n          (target as HTMLElement).tagName.toLowerCase(),\n        ) ||\n        !lowerCaseKeys.includes(lowerCaseKey)\n      ) {\n        return;\n      }\n\n      if (keys[lowerCaseKey]) {\n        setKeys({ type: ActionType.Keyup, key: lowerCaseKey });\n      }\n    },\n    [keys, lowerCaseKeys],\n  );\n\n  useEffect(() => {\n    if (Object.values(keys).every((value) => value)) {\n      callback(keys);\n      setKeys({ type: ActionType.Reset, payload: initialKeyMapping });\n    }\n  }, [callback, keys, initialKeyMapping]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown, true);\n    return () => window.removeEventListener('keydown', handleKeydown, true);\n  }, [handleKeydown]);\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyup, true);\n    return () => window.removeEventListener('keyup', handleKeyup, true);\n  }, [handleKeyup]);\n};\n\nexport { useHotkeys };\n","import styled from 'styled-components/macro';\n\nconst StyledHeader = styled.h1`\n  margin: 0;\n  padding-bottom: 2rem;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst Header = (): JSX.Element => {\n  return <StyledHeader>Things to do</StyledHeader>;\n};\n\nexport { Header };\n","import styled from 'styled-components/macro';\nimport { faPlus, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ImageButton } from '../../common/ImageButton';\nimport { InputMode, useStore } from '../../../store';\n\nconst ActionList = styled.ul`\n  flex: 0 0 auto;\n  list-style-type: none;\n  border-right: 0.1rem solid #ccc;\n  margin-right: 1.8rem;\n  padding: 0;\n`;\n\nconst ActionItem = styled.li`\n  display: inline;\n`;\n\nconst ActionButton = styled(ImageButton)<{ active: boolean }>`\n  margin: 0 0.3rem;\n\n  ${(props) => props.active && `opacity: 1;`}\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  font-size: 2.7rem;\n`;\n\nconst Actions = (): JSX.Element => {\n  const mode = useStore.useInputMode();\n  const toggleInputMode = useStore.useToggleInputMode();\n\n  return (\n    <ActionList>\n      <ActionItem>\n        <ActionButton\n          active={mode === InputMode.Add}\n          value={InputMode.Add}\n          aria-label=\"Create Mode\"\n          onClick={() => toggleInputMode(InputMode.Add)}\n        >\n          <StyledFontAwesomeIcon icon={faPlus} fixedWidth />\n        </ActionButton>\n      </ActionItem>\n      <ActionItem>\n        <ActionButton\n          active={mode === InputMode.Search}\n          value={InputMode.Search}\n          aria-label=\"Search Mode\"\n          onClick={() => toggleInputMode(InputMode.Search)}\n        >\n          <StyledFontAwesomeIcon icon={faSearch} fixedWidth />\n        </ActionButton>\n      </ActionItem>\n    </ActionList>\n  );\n};\n\nexport { Actions };\n","import styled from 'styled-components/macro';\nimport { FilterMode, useStore } from '../../../store';\n\nconst FilterList = styled.ul`\n  flex: 0 0 auto;\n  list-style-type: none;\n  padding-left: 0;\n`;\n\nconst FilterItem = styled.li`\n  display: inline;\n  margin: 0.5rem;\n`;\n\nconst Button = styled.button.attrs({ type: 'button' })<{ active: boolean }>`\n  font-size: 1.8rem;\n  text-transform: capitalize;\n  background-color: transparent;\n  color: inherit;\n  padding: 0.3rem 0.7rem;\n  text-decoration: none;\n  border: 0.1rem solid transparent;\n  border-radius: 0.3rem;\n\n  &:hover {\n    border-color: rgba(175, 47, 47, 0.1);\n  }\n\n  ${(props) =>\n    props.active &&\n    `\n    border-color: rgba(175, 47, 47, 0.2);\n  `}\n`;\n\nconst Filter = (): JSX.Element => {\n  const mode = useStore.useFilterMode();\n  const toggleFilterMode = useStore.useToggleFilterMode();\n\n  return (\n    <FilterList>\n      {Object.entries(FilterMode).map(([key, value]) => (\n        <FilterItem key={key}>\n          <Button\n            active={value === mode}\n            onClick={() => toggleFilterMode(value)}\n          >\n            {value}\n          </Button>\n        </FilterItem>\n      ))}\n    </FilterList>\n  );\n};\n\nexport { Filter };\n","import styled from 'styled-components/macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useTodos } from '../useTodos';\nimport { ImageButton } from '../../common/ImageButton';\nimport { useStore } from '../../../store';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: auto;\n`;\n\nconst PaginationList = styled.ul`\n  margin-right: auto;\n  list-style-type: none;\n  padding: 0;\n`;\n\nconst PaginationItem = styled.li`\n  display: inline;\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  font-size: 2.7rem;\n`;\n\nconst Pagination = (): JSX.Element => {\n  const page = useStore.usePage();\n  const togglePage = useStore.useTogglePage();\n  const { isPreviousData, hasMoreData } = useTodos();\n\n  return (\n    <Wrapper>\n      Current page: {page}\n      <PaginationList>\n        <PaginationItem>\n          <ImageButton\n            aria-label=\"Previous Page\"\n            onClick={() => togglePage(Math.max(page - 1, 1))}\n            disabled={page === 1}\n          >\n            <StyledFontAwesomeIcon icon={faChevronLeft} fixedWidth />\n          </ImageButton>\n        </PaginationItem>\n        <PaginationItem>\n          <ImageButton\n            aria-label=\"Next Page\"\n            onClick={() => togglePage(hasMoreData ? page + 1 : page)}\n            disabled={isPreviousData || !hasMoreData}\n          >\n            <StyledFontAwesomeIcon icon={faChevronRight} fixedWidth />\n          </ImageButton>\n        </PaginationItem>\n      </PaginationList>\n    </Wrapper>\n  );\n};\n\nexport { Pagination };\n","import styled from 'styled-components/macro';\nimport { Actions } from '../Actions';\nimport { Filter } from '../Filter';\nimport { Pagination } from '../Pagination';\n\nconst StyledFooter = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  border-top: 0.1rem solid #ddd;\n  background-color: #f4fce8;\n  margin: 0 -2rem -1rem -2rem;\n  padding: 0 2rem;\n  color: #707070;\n`;\n\nconst Footer = (): JSX.Element => {\n  return (\n    <StyledFooter>\n      <Actions />\n      <Pagination />\n      <Filter />\n    </StyledFooter>\n  );\n};\n\nexport { Footer };\n","import type { KeyboardEvent } from 'react';\nimport { useQueryClient } from 'react-query';\nimport styled from 'styled-components/macro';\nimport { useCreateTodoMutation } from '../../../generated';\nimport { useStore } from '../../../store';\n\nconst StyledInput = styled.input.attrs({\n  type: 'text',\n})`\n  display: block;\n  width: 100%;\n  height: 4rem;\n  padding: 0.6rem 1.2rem;\n  font-size: 1.6rem;\n  color: #555;\n  background-color: #fff;\n  border: 1px solid #ccc;\n`;\n\nconst InputBox = (): JSX.Element => {\n  const query = useStore.useQuery();\n  const updateQuery = useStore.useUpdateQuery();\n  const togglePage = useStore.useTogglePage();\n  const queryClient = useQueryClient();\n  const { mutate } = useCreateTodoMutation<Error>({\n    onSuccess: async () => {\n      queryClient.invalidateQueries('Todos');\n      updateQuery('');\n      togglePage(1);\n    },\n  });\n\n  const handleKeyUp = (e: KeyboardEvent<HTMLInputElement>): void => {\n    if (e.code === 'Enter') {\n      // TODO: implement user management\n      const taskToAdd = query.trim();\n      if (taskToAdd !== '') {\n        mutate({ input: { task: taskToAdd, done: false, user_id: '1' } });\n      }\n    }\n  };\n\n  return (\n    <StyledInput\n      placeholder=\"Add New\"\n      value={query}\n      onChange={(e) => updateQuery(e.target.value)}\n      onKeyUp={handleKeyUp}\n    />\n  );\n};\n\nexport { InputBox, StyledInput };\n","import type { ChangeEvent } from 'react';\nimport { useStore } from '../../../store';\nimport { StyledInput } from '../InputBox';\n\nconst SearchBox = (): JSX.Element => {\n  const query = useStore.useQuery();\n  const updateQuery = useStore.useUpdateQuery();\n  function handleChange(e: ChangeEvent<HTMLInputElement>): void {\n    const { value } = e.target;\n    updateQuery(value);\n  }\n\n  return (\n    <StyledInput placeholder=\"Search\" value={query} onChange={handleChange} />\n  );\n};\n\nexport { SearchBox };\n","import { InputMode, useStore } from '../../../store';\nimport { InputBox } from '../InputBox';\nimport { SearchBox } from '../SearchBox';\n\nconst InputToggle = (): JSX.Element | null => {\n  const mode = useStore.useInputMode();\n\n  switch (mode) {\n    case InputMode.Add: {\n      return <InputBox />;\n    }\n    case InputMode.Search: {\n      return <SearchBox />;\n    }\n    default: {\n      return null;\n    }\n  }\n};\n\nexport { InputToggle };\n","import styled from 'styled-components/macro';\nimport { InputMode, useStore } from '../../../store';\n\nconst Paragraph = styled.p`\n  position: absolute;\n  font-size: 1.44rem;\n  margin-top: 2rem;\n  left: 0;\n  right: 0;\n  color: #6b6b6b;\n  text-align: center;\n`;\n\nconst INFO_SHORTCUT_KEYS =\n  'Press `Shift + S` to search and `Shift + A` to create a new item.';\nconst INFO_CANCEL_SHORTCUT_KEY = 'Press `Esc` to cancel.';\n\nconst InfoPanel = (): JSX.Element => {\n  const mode = useStore.useInputMode();\n  const message =\n    mode === InputMode.None ? INFO_SHORTCUT_KEYS : INFO_CANCEL_SHORTCUT_KEY;\n\n  return <Paragraph>{message}</Paragraph>;\n};\n\nexport { InfoPanel };\n","/* eslint-disable @typescript-eslint/no-floating-promises */\nimport type { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport { reportWebVitals };\n/* eslint-enable @typescript-eslint/no-floating-promises */\n","import { useHotkeys } from '../../hooks';\nimport { InputMode, useStore } from '../../store';\n\nconst shiftKey = 'shift';\nconst escapeKey = 'escape';\n\nconst useTodoHotkeys = (): void => {\n  const toggleInputMode = useStore.useToggleInputMode();\n  const createModeKeys = [shiftKey, 'a'];\n  const searchModeKeys = [shiftKey, 's'];\n  const noInputModeKeys = [escapeKey];\n\n  useHotkeys(createModeKeys, () => toggleInputMode(InputMode.Add));\n  useHotkeys(searchModeKeys, () => toggleInputMode(InputMode.Search));\n  useHotkeys(noInputModeKeys, () => toggleInputMode(InputMode.None));\n};\n\nexport { useTodoHotkeys };\n","import styled from 'styled-components/macro';\nimport { TodoItem } from './TodoItem/TodoItem';\nimport { useTodos } from './useTodos';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport { InputToggle } from './InputToggle';\nimport { InfoPanel } from './InfoPanel';\nimport { useTodoHotkeys } from './useTodoHotkeys';\n\nconst Section = styled.section`\n  position: relative;\n  background-color: #fff;\n  padding: 2rem 2rem 1rem 2rem;\n  border: 0.1rem solid #ddd;\n  border-radius: 0.2rem;\n  margin: 3rem auto;\n  min-width: 32rem;\n  max-width: 60rem;\n`;\n\nconst StyledList = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n`;\n\nconst TodoList = (): JSX.Element => {\n  const { data } = useTodos();\n\n  useTodoHotkeys();\n\n  return (\n    <Section>\n      <>\n        <Header />\n        <InputToggle />\n\n        <StyledList>\n          {data?.todos?.map(\n            (todo) => todo && <TodoItem key={todo.id} data={todo} />,\n          )}\n        </StyledList>\n        <Footer />\n      </>\n      <InfoPanel />\n      {/* {isFetching && (\n        <p style={{ position: 'absolute', left: 10, bottom: 10 }}>\n          <Spinner /> Loading...\n        </p>\n      )} */}\n    </Section>\n  );\n};\n\nexport { TodoList };\n","import { QueryCache, QueryClient } from 'react-query';\nimport toast from 'react-hot-toast';\n\nconst queryClient = new QueryClient({\n  queryCache: new QueryCache({\n    onError: (error) =>\n      toast.error(`Something went wrong: ${(error as Error).message}`),\n  }),\n});\n\nexport { queryClient };\n","import { QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { Toaster } from 'react-hot-toast';\nimport { TodoList } from '../TodoList';\nimport { queryClient } from './queryClient';\n\nconst App = (): JSX.Element => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TodoList />\n      <Toaster />\n      <ReactQueryDevtools initialIsOpen />\n    </QueryClientProvider>\n  );\n};\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport { reportWebVitals } from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}